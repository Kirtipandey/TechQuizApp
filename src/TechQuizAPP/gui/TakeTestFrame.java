/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TechQuizAPP.gui;

import TechQuizAPP.dao.PerformanceDAO;
import TechQuizAPP.dao.QuestionDAO;
import TechQuizAPP.pojo.AnswerPojo;
import TechQuizAPP.pojo.AnswerStorePojo;
import TechQuizAPP.pojo.ExamPojo;
import TechQuizAPP.pojo.PerformancePojo;
import TechQuizAPP.pojo.QuestionPojo;
import TechQuizAPP.pojo.QuestionStore;
import TechQuizAPP.pojo.UserProfile;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author its Kitzz
 */
public class TakeTestFrame extends javax.swing.JFrame {
       private ExamPojo exam;
    private QuestionStore qstore;
    private AnswerStorePojo astore;
    private AnswerPojo ans;
    private int qno,pos=0;


    /**
     * Creates new form TakeTestFrame
     */
    public TakeTestFrame() {
    initComponents();
        this.setLocationRelativeTo(null);
        lblUsername.setText("Hello "+UserProfile.getUsername());
        qstore=new QuestionStore();
        astore=new AnswerStorePojo();	
        qno=1;
        lblQno.setText(lblQno.getText()+qno);

    }
        public TakeTestFrame(ExamPojo exam){
        this();
        this.exam=exam;
        lblTitle.setText(exam.getLanguage().toUpperCase()+" PAPER");
        loadQuestions();
        showQuestion();
    }

    public void loadQuestions() {
        try{	
               ArrayList<QuestionPojo> questionList=QuestionDAO.getQuestionsByExamId(exam.getExamid());
                for(QuestionPojo obj:questionList){
                    qstore.addQuestion(obj);
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error while connecting to DB!","Exception!",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
        
            }
        }
   public void showQuestion(){
        QuestionPojo question=qstore.getQuestion(pos);
        buttonGroup1.clearSelection();
        txtQuestion.setText(question.getQuestion());
        jrOption1.setText(question.getAnswer1());
        jrOption2.setText(question.getAnswer2());
        jrOption3.setText(question.getAnswer3());
        jrOption4.setText(question.getAnswer4());
        AnswerPojo answer=astore.getAnswerByQno(qno);
        if(answer==null)
            return;
        String chosenAnswer=answer.getChosenAnswer();
        switch(chosenAnswer){
            case "Answer1":
                jrOption1.setSelected(true);
                break;
            case "Answer2":
                jrOption2.setSelected(true);
                break;
            case "Answer3":
                jrOption3.setSelected(true);
                break;
            case "Answer4":
                jrOption4.setSelected(true);
                break;
        }
        
    }

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jrOption2 = new javax.swing.JRadioButton();
        jrOption1 = new javax.swing.JRadioButton();
        jrOption4 = new javax.swing.JRadioButton();
        jrOption3 = new javax.swing.JRadioButton();
        lblQno = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        jbNext = new javax.swing.JButton();
        jbPrevious = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jbDone = new javax.swing.JButton();
        lblUsername = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        lblTitle.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 255, 255));
        lblTitle.setText("Question paper");

        buttonGroup1.add(jrOption2);
        jrOption2.setText("jRadioButton1");
        jrOption2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrOption1);
        jrOption1.setText("jRadioButton2");
        jrOption1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrOption4);
        jrOption4.setText("jRadioButton3");

        buttonGroup1.add(jrOption3);
        jrOption3.setText("jRadioButton4");
        jrOption3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption3ActionPerformed(evt);
            }
        });

        lblQno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblQno.setForeground(new java.awt.Color(0, 255, 255));
        lblQno.setText("jLabel2");

        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane2.setViewportView(txtQuestion);

        jbNext.setText("Next");
        jbNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNextActionPerformed(evt);
            }
        });

        jbPrevious.setText("Previous");
        jbPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPreviousActionPerformed(evt);
            }
        });

        jbCancel.setText("Cancel");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });

        jbDone.setText("Done");
        jbDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDoneActionPerformed(evt);
            }
        });

        lblUsername.setFont(new java.awt.Font("Chiller", 1, 24)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 102, 102));
        lblUsername.setText("jLabel3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUsername)
                .addGap(65, 65, 65)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jbNext)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrOption1)
                            .addComponent(jrOption3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrOption4)
                            .addComponent(jrOption2))
                        .addGap(61, 61, 61))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbPrevious)
                                .addGap(38, 38, 38)
                                .addComponent(jbCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbDone))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 6, Short.MAX_VALUE)))
                        .addContainerGap(26, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsername)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(lblTitle)))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQno)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption1)
                    .addComponent(jrOption2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption4)
                    .addComponent(jrOption3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNext)
                    .addComponent(jbPrevious)
                    .addComponent(jbCancel)
                    .addComponent(jbDone))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrOption3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption3ActionPerformed
      
    }//GEN-LAST:event_jrOption3ActionPerformed

    private void jrOption1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrOption1ActionPerformed

    private void jrOption2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrOption2ActionPerformed

    private void jbDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDoneActionPerformed
   String userAnswer=getUserAnswer();
   if(userAnswer!=null){
      QuestionPojo question=qstore.getQuestion(pos);
      String correctAnswer=question.getCorrectAnswer();
            AnswerPojo  newanswer=new AnswerPojo (exam.getExamid(),exam.getLanguage(),qno,userAnswer,correctAnswer);
        System.out.println(newanswer);
        AnswerPojo  answer=astore.getAnswerByQno(qno);
        if(answer==null)	
            astore.addAnswer(newanswer);
        else{
            if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
        }
        }
        int right=0,wrong=0;
        for(QuestionPojo question:qstore.getAllQuestion()){
            int qno=question.getQno();
            AnswerPojo  answer=astore.getAnswerByQno(qno);
            if(answer==null)
                continue;
            else
            {
                String chosenAnswer1=answer.getChosenAnswer();
                String correctAnswer=answer.getCorrectAnswer();
                if(chosenAnswer1.equals(correctAnswer))
                    ++right;
                else
                    ++wrong;
                    
            } }
       String reportCard="TotalQuestion:"+qstore.getcount();
       reportCard+="\nRight Answer"+right;
       reportCard+="\nWrong Answer"+wrong;
       reportCard+="\nUnAttempted:"+(qstore.getcount()-(right+wrong));
        JOptionPane.showMessageDialog(null, reportCard,"Your Result",JOptionPane.INFORMATION_MESSAGE);
        try{
            PerformancePojo performance=new PerformancePojo(exam.getExamid(),exam.getLanguage(),UserProfile.getUsername(),right,wrong,qstore.getcount()-(right+wrong),(double)right/qstore.getcount()*100);
            PerformanceDAO.addPerformance(performance);
            JOptionPane.showMessageDialog(null,"ur performance has succefully added to db","perfoma added",JOptionPane.INFORMATION_MESSAGE);
       ChoosePaperFrame paperFrame=new ChoosePaperFrame();
       paperFrame.setVisible(true);
       this.dispose();
       
        }
          catch(SQLException e){
    JOptionPane.showMessageDialog(null,"Some error occurred in DB!","Error!",JOptionPane.ERROR_MESSAGE);  
          e.printStackTrace();

    }
    }//GEN-LAST:event_jbDoneActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
  ChoosePaperFrame  chooseFrame=new ChoosePaperFrame();
  chooseFrame.setVisible(true);
  this.dispose();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void jbNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNextActionPerformed
        String chosenAnswer=getUserAnswer();	
        if(chosenAnswer!=null){
        QuestionPojo question=qstore.getQuestion(pos);
        String correctAnswer=question.getCorrectAnswer();
       AnswerPojo newanswer=new AnswerPojo(exam.getExamid(),exam.getLanguage(),qno,
chosenAnswer,correctAnswer);
        System.out.println(newanswer);
        AnswerPojo answer=astore.getAnswerByQno(qno);
        if(answer==null)
            astore.addAnswer(newanswer);
        else{
            if(newanswer.getChosenAnswer().equals(
answer.getChosenAnswer())==false){
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
        }
     }
        pos++;
        if(pos>=qstore.getcount())
        {
            pos=0;
        }
         qno++;         
        if(qno>qstore.getcount())
                qno=1;
        lblQno.setText("Question no:"+qno);
        showQuestion();
    }   
public String getUserAnswer(){
        
        if(jrOption1.isSelected())
            return "Answer1";
        else if(jrOption2.isSelected())
            return "Answer2";
        else if(jrOption3.isSelected())
            return "Answer3";
        else if(jrOption4.isSelected())
            return "Answer4";
        else
            return null;
    

    }//GEN-LAST:event_jbNextActionPerformed

    private void jbPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPreviousActionPerformed
      String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
        QuestionPojo question=qstore.getQuestion(pos);
        String correctAnswer=question.getCorrectAnswer();
        AnswerPojo newanswer=new AnswerPojo(exam.getExamid(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
        System.out.println(newanswer);	
        AnswerPojo answer=astore.getAnswerByQno(qno);
        if(answer==null)
            astore.addAnswer(newanswer);
        else{
            if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
        }
     }
        pos--;
        if(pos<0)
        {
            pos=qstore.getcount()-1;
        }
      qno--;
        if(qno<=0)
        qno=qstore.getcount();
        lblQno.setText("Question no:"+qno);
        showQuestion();
    }//GEN-LAST:event_jbPreviousActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbDone;
    private javax.swing.JButton jbNext;
    private javax.swing.JButton jbPrevious;
    private javax.swing.JRadioButton jrOption1;
    private javax.swing.JRadioButton jrOption2;
    private javax.swing.JRadioButton jrOption3;
    private javax.swing.JRadioButton jrOption4;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables
}
